{"version":3,"sources":["components/WorkExperiences.tsx","components/Awards.tsx","components/Volunteers.tsx","components/Header.tsx","components/Educations.tsx","components/Skills.tsx","components/Publications.tsx","components/Basics.tsx","components/Languages.tsx","components/About.tsx","components/Interests.tsx","components/References.tsx","components/Projects.tsx","pages/Resume.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["WorkExperiences","experiences","className","map","work","location","href","url","target","rel","startDate","endDate","position","description","highlights","length","hl","Awards","awards","id","award","date","awarder","title","summary","Volunteers","volunteers","volunteer","organization","Header","resume","src","alt","basics","name","label","Educations","educations","education","institution","studyType","area","gpa","courses","course","Skills","skills","skill","level","keywords","keyword","Publications","publications","publication","publisher","releaseDate","profileIcons","Map","set","Basics","email","phone","shouldRenderlocation","loc","address","city","region","postalCode","countryCode","ShouldRenderlocation","profiles","profile","get","network","Languages","languages","language","fluency","About","Interests","interests","interest","References","references","reference","Projects","projects","project","entity","roles","join","defaultResumeState","ResumePage","props","state","fetch","then","e","json","respText","this","setState","fetchData","React","Component","App","path","exact","component","Resume","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fcca0fc5.chunk.js","sourcesContent":["import React from 'react';\nimport {Work} from '../interfaces/resumejson';\n\nfunction WorkExperiences(experiences: Work[]) {\n return (\n    <div className=\"box\">\n    <h2>\n      <i className=\"fa fa-suitcase ico\"></i> Work Experience\n    </h2>\n    {experiences && experiences.map(work=>(\n    <div className=\"job clearfix\">\n        <div className=\"row\">\n          <div className=\"details\">\n            <div className=\"where\">{work.location}</div>\n            <div className=\"address\">\n              <a href={work.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <i className=\"fa fa-globe ico\"></i> {work.url}\n              </a>\n            </div>\n            <div className=\"year\">{work.startDate} – {work.endDate}</div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"job-details col-xs-11\">\n            <div className=\"profession\">{work.position}</div>\n            <div className=\"description\">\n              {work.description}\n              {work.highlights && work.highlights.length >0 ? (<div className=\"highlights\">Highlights</div>):null}\n              <ul className=\"list-group\">\n                {work.highlights && work.highlights.map(hl=>(\n                <li className=\"list-group-item\">{hl}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    ))}\n  </div>\n )\n}\n\nexport default WorkExperiences;","import React from 'react';\nimport {Award} from '../interfaces/resumejson';\n\nfunction Awards(awards: Award[]) {\n return (\n    <div className=\"box\">\n      <h2>\n        <i className=\"fa fa-certificate ico\"></i> Awards\n      </h2>\n      <ul id=\"awards\" className=\"clearfix\">\n        {awards && awards.map(award =>(\n        <li>\n          <div className=\"year pull-left\">{award.date}</div>\n          <div className=\"description pull-right\">\n            <h3>{award.awarder}</h3>\n            <p>\n              <i className=\"fa fa-trophy ico\"></i> {award.title}\n            </p>\n            <p>{award.summary}</p>\n          </div>\n        </li>\n        ))}\n      </ul>\n  </div>\n )\n};\n\nexport default Awards","import React from 'react';\nimport {Volunteer} from '../interfaces/resumejson';\n\nfunction Volunteers(volunteers: Volunteer[]) {\n return (\n    <div className=\"box\">\n    <h2>\n      <i className=\"fa fa-group ico\"></i> Volunteer\n    </h2>\n    {volunteers.map(volunteer=>(\n    <div className=\"job clearfix\">\n      <div className=\"row\">\n        <div className=\"details\">\n          <div className=\"where\">{volunteer.organization}</div>\n          <div className=\"address\">\n            <a href={volunteer.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              <i className=\"fa fa-globe ico\"></i>{' '}\n              {volunteer.url}\n            </a>\n          </div>\n          <div className=\"year\">{volunteer.startDate} – {volunteer.endDate}</div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-xs-11 pull-right\">\n          <div className=\"profession\">{volunteer.position}</div>\n          <div className=\"description\">\n            <div className=\"highlights\">Highlights</div>\n            <ul className=\"list-group\">\n              {volunteer.highlights && volunteer.highlights.map(hl=>(\n              <li className=\"list-group-item\">{hl}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    ))}\n  </div>\n )\n}\nexport default Volunteers;","import React from 'react';\nimport { Resume} from '../interfaces/resumejson';\n\nfunction Header(resume: Resume) {\n return (\n    <div className=\"row\">\n    <div className=\"col-xs-12\">\n      <div id=\"photo-header\" className=\"text-center\">\n        <div id=\"photo\">\n          <img\n            src=\"//www.gravatar.com/avatar/7e6be1e623fb85adde3462fa8587caf2?s=200&amp;r=pg&amp;d=mm\"\n            alt=\"avatar\"\n          />\n        </div>\n          <div id=\"text-header\">\n          <h1>\n            {resume &&  resume.basics && resume.basics.name}\n            <br />\n            <span>{resume &&  \n            resume.basics && resume.basics.label}</span>\n          </h1>\n        </div>\n      </div>\n    </div>\n</div>\n )\n}\n\nexport default Header;","import React from 'react';\nimport {Education} from '../interfaces/resumejson';\n\nfunction Educations(educations: Education[]) {\n return (\n    <div className=\"box\">\n    <h2>\n      <i className=\"fa fa-university ico\"></i> Education\n    </h2>\n    <ul id=\"education\" className=\"clearfix\">\n      {educations.map(education=>(\n      <li>\n      <div className=\"year pull-left\">{education.startDate} - {education.endDate}</div>\n      <div className=\"description pull-right\">\n        <h3>{education.institution}</h3>\n        {education.studyType && education.studyType.length >0 ? (<p><i className=\"fa fa-graduation-cap ico\"></i> {education.studyType}</p>): null}\n        {education.area && education.area.length > 0 ? (<p>{education.area}</p>): null}\n        {education.gpa && education.gpa.length > 0 ? (<p>GPA: {education.gpa}</p>): null}\n        {education.courses && education.courses.length >0 ? (<div>Courses</div>): null}\n        <ul className=\"list-group\">\n          {education.courses && education.courses.map(course=>(\n          <li className=\"list-group-item\">{course}</li>\n          ))}\n        </ul>\n      </div>\n    </li>        \n      ))}\n    </ul>\n  </div>\n )\n};\n\nexport default Educations","import React from 'react';\nimport {Skill} from '../interfaces/resumejson';\n\nfunction Skills(skills: Skill[]) {\n return (\n  <div className=\"box\">\n  <h2>\n    <i className=\"fa fa-tasks ico\"></i> Skills\n  </h2>\n  {skills.map(skill=>(\n  <div className=\"skills clearfix\">\n    <div className=\"item-skills\">\n      {skill.name}\n      <span className=\"skill-level\">{skill.level}</span>\n    </div>\n    <div className=\"col-sm-offset-1 col-sm-12 clearfix\">\n      {skill.keywords && skill.keywords.map(keyword=>(\n      <span className=\"skill badge\">{keyword}</span>\n      ))}\n    </div>\n  </div>\n  ))}\n</div>\n )\n}\nexport default Skills;","import React from 'react';\nimport {Publication} from '../interfaces/resumejson';\n\nfunction Publications(publications: Publication[]) {\n return (\n  <div className=\"box\">\n    <h2>\n      <i className=\"fa fa-book ico\"></i> Publications\n    </h2>\n    {publications && publications.map(publication =>(\n    <div className=\"publication panel panel-default\">\n      <div className=\"panel-heading\">\n        <div className=\"name panel-title\">\n          {publication.name}\n        </div>\n      </div>\n      <div className=\"panel-body\">\n        <div className=\"publisher\">\n          <i className=\"fa fa-bookmark ico\"></i> {publication.publisher}\n        </div>\n        <div className=\"year\">{publication.releaseDate}</div>\n        <div className=\"address\">\n          <a href={publication.url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fa fa-globe ico\"></i>{' '}\n            {publication.url}\n          </a>\n        </div>\n        <p>\n          {publication.summary}\n        </p>\n      </div>\n    </div>\n    ))}\n    </div>\n  )\n};\n\nexport default Publications","import React from 'react';\nimport {Resume,Profile,ResumeJsonLocation} from '../interfaces/resumejson';\n\nconst profileIcons = new Map<string,string>();\n\nprofileIcons.set(\"SoundCloud\", \"fa-soundcloud\");\nprofileIcons.set(\"Twitter\", \"fa-twitter\");\nprofileIcons.set(\"url\",\"fa-globe\");\nprofileIcons.set(\"LinkedIn\",\"fa-linkedin\");\n\n\nconst Profiles = (profiles: Profile[] ) => (\n  \n   profiles.map((profile:Profile) =>(\n  <div className=\"contact-item\">\n    <div className=\"icon pull-left text-center\">\n      <span className={\"fa fa-fw \" +profileIcons.get(profile.network)}></span>\n    </div>\n    <div className=\"title pull-right\">{profile.network}</div>\n    <div className=\"description pull-right\">\n      <a href={profile.url} target=\"_blank\" rel=\"noopener noreferrer\">\n        {profile.url}\n      </a>\n    </div>\n  </div>\n  ))\n)\n\nconst Phone = (phone:string) => {\n  return (\n  <div className=\"contact-item\">\n    <div className=\"icon pull-left text-center\">\n      <span className=\"fa fa-phone fa-fw\"></span>\n    </div>\n    <div className=\"title only pull-right\">{phone}</div>\n  </div>\n  )\n}\n\nconst Location = (location: ResumeJsonLocation) => {\n  return (\n    <div className=\"contact-item\">\n      <div className=\"icon pull-left text-center\">\n        <span className=\"fa fa-map-marker fa-fw\"></span>\n      </div>\n      <div className=\"title pull-right\">{location.address}</div>\n      <div className=\"title pull-right\">\n        {location.city && location.city.length > 0 ? (location.city+ \",\"):null} {location.region} {location.postalCode} {location.countryCode}\n      </div>\n    </div>\n  )\n}\n\nconst Email = (email:string) => {\n  return (\n  <div className=\"contact-item\">\n  <div className=\"icon pull-left text-center\">\n    <span className=\"fa fa-envelope fa-fw\"></span>\n  </div>\n  <div className=\"title only pull-right\">\n    <a href={\"mailto:\" + email} target=\"_blank\" rel=\"noopener noreferrer\">\n      {email}\n    </a>\n  </div>\n</div>\n  )\n}\n\nconst ShouldRenderlocation = (resume:Resume)=>{\n  // try to render if any part of the location is filled in\n\n  const loc = resume.basics.location;\n  \n  return resume.basics.location &&\n    (\n      (loc.address && loc.address.length > 0) ||\n      (loc.city && loc.city.length > 0) ||\n      (loc.region && loc.region.length > 0) ||\n      (loc.postalCode && loc.postalCode.length) > 0 ||\n      (loc.countryCode && loc.countryCode.length) > 0\n    ) \n}\n\nconst BasicsUrl = (url:string) => {\n  return (\n    <div className=\"contact-item\">\n      <div className=\"icon pull-left text-center\">\n        <span className=\"fa fa-globe fa-fw\"></span>\n      </div>\n      <div className=\"title only pull-right\">\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {url}\n        </a>\n      </div>\n    </div>\n  )\n}\n\nfunction Basics(resume: Resume) {\n  const shouldRenderlocation = ShouldRenderlocation(resume);\n return (\n  <div className=\"box clearfix\">\n    <h2>\n      <i className=\"fa fa-bullseye ico\"></i> Contact\n    </h2>\n\n    {shouldRenderlocation && Location(resume.basics.location)}\n\n    {resume.basics.phone && resume.basics.phone.length>0 && Phone(resume.basics.phone)}\n    {resume.basics.email && resume.basics.email.length>0 && Email(resume.basics.email)}\n    {resume.basics.url && resume.basics.url.length>0 && BasicsUrl(resume.basics.url)}\n    {resume.basics.profiles && resume.basics.profiles.length>0 && Profiles(resume.basics.profiles)}\n  </div>\n )\n}\n\nexport default Basics","import React from 'react';\nimport {Language} from '../interfaces/resumejson';\n\nfunction Languages(languages: Language[]) {\n return (\n    <div className=\"box\">\n    <h2>\n      <i className=\"fa fa-language ico\"></i> Languages\n    </h2>\n    <ul className=\"list-group\">\n      {languages.map(language=>(\n      <li className=\" list-group-item\">\n      {language.language}\n      <span className=\"skill badge pull-right\">{language.fluency}</span>\n    </li>        \n      ))}\n    </ul>\n  </div>\n )\n};\n\nexport default Languages;","import React from 'react';\nimport {Resume} from '../interfaces/resumejson';\n\nfunction About(resume: Resume) {\n return (\n    <div className=\"box\">\n    <h2>\n      <i className=\"fa fa-user ico\"></i> About\n    </h2>\n    <p>\n      {resume && resume.basics && resume.basics.summary}\n    </p>\n  </div>\n )\n};\n\nexport default About;","import React from 'react';\nimport {Interest} from '../interfaces/resumejson';\n\nfunction Interests(interests: Interest[]) {\n return (\n  <div className=\"box\">\n    <h2>\n      <i className=\"fa fa-heart ico\"></i> Interests\n    </h2>\n    {interests.map(interest=>(\n    <div className=\"interests clearfix\">\n      <div className=\"item-interests\">{interest.name}</div>\n      <div className=\"col-sm-offset-1 col-sm-12 clearfix\">\n      {interest.keywords && interest.keywords.map(keyword=>(\n        <span className=\"interest badge\">{keyword}</span>\n      ))}\n      </div>\n    </div>\n    ))}\n  </div>\n )\n};\n\nexport default Interests;","import React from 'react';\nimport {Reference} from '../interfaces/resumejson';\n\nfunction References(references: Reference[]) {\n return (\n<div className=\"box\">\n    <h2>\n        <i className=\"fa fa-check-square ico\"></i> References\n    </h2>\n    {references && references.map(reference => (\n    <>\n    <blockquote>\n        <div>\n        {reference.reference}\n        </div>\n        <footer>\n        <a href=\"/\">{reference.name}</a>\n        </footer>\n    </blockquote>\n    <br />\n    </>\n    )   \n    )}\n</div>\n )\n};\n\nexport default References;","import React from 'react';\nimport { Project} from '../interfaces/resumejson';\n\nfunction Projects(projects: Project[]) {\n return (\n    <div className=\"box\">\n    <h2>\n      <i className=\"fa fa-cogs ico\"></i> Projects\n    </h2>\n    {projects && projects.map(project=>(\n    <div className=\"job clearfix\">\n        <div className=\"row\">\n          <div className=\"details\">\n            <div className=\"where\">{project.name}</div>\n            <div className=\"address\">\n              <a href={project.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <i className=\"fa fa-globe ico\"></i> {project.entity}\n              </a>\n            </div>\n            <div className=\"year\">{project.startDate}{project.endDate && project.endDate.length >0 ? (\" – \" + project.endDate):null}</div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"job-details col-xs-11\">\n            <div className=\"profession\">{project.roles.join(\", \")}</div>\n            <div className=\"description\">\n              {project.description}\n              {project.highlights && project.highlights.length >0 ? (<div className=\"highlights\">Highlights</div>):null}\n              <ul className=\"list-group\">\n                {project.highlights && project.highlights.map(hl=>(\n                <li className=\"list-group-item\">{hl}</li>\n                ))}\n              </ul>\n            </div>\n            {project.keywords && project.keywords.map(keyword=>(\n            <span className=\"skill badge\">{keyword}</span>\n            ))}\n          </div>\n        </div>\n      </div>\n    ))}\n  </div>\n )\n}\n\nexport default Projects;","import React from 'react';\n\nimport { Resume }  from '../interfaces/resumejson';\n\nimport WorkExperiences from '../components/WorkExperiences';\nimport Awards from '../components/Awards';\nimport Volunteers from '../components/Volunteers';\nimport Header from '../components/Header';\nimport Educations from '../components/Educations';\nimport Skills from '../components/Skills';\nimport Publications from '../components/Publications';\nimport Basics from '../components/Basics';\nimport Languages from '../components/Languages';\nimport About from '../components/About';\nimport Interests from '../components/Interests';\nimport References from '../components/References';\nimport Projects from '../components/Projects';\n\ninterface State {\n  resume: Resume;\n}\n\ninterface Props {}\n\nconst defaultResumeState = {} as Resume;\n\nclass ResumePage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n        resume: defaultResumeState,\n    };\n  }\n\n  async fetchData() {\n    const url = '/resume.json';\n\n    const respText = await fetch(url).then(e => e.json());\n    const resume = respText as Resume;\n\n    this.setState({ resume });\n  }\n\n  async componentDidMount() {\n    await this.fetchData();\n  }\n\n  render() {\n    const resume = this.state.resume;\n\n    return (\n        <div className=\"container\">\n            {resume && resume.basics && Header(resume)}\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-sm-7\">\n              {resume && About(resume)}              \n              {resume && resume.work && resume.work.length > 0 && WorkExperiences(resume.work)}              \n              {resume && resume.awards && resume.awards.length > 0 && Awards(resume.awards)}              \n              {resume && resume.volunteer && resume.volunteer.length > 0 && Volunteers(resume.volunteer)}             \n              {resume && resume.publications && resume.publications.length > 0 && Publications(resume.publications)}           \n            </div>\n            <div className=\"col-xs-12 col-sm-5\">\n              {resume && resume.basics && resume.basics.profiles && Basics(resume)}             \n              {resume && resume.education && resume.education.length > 0 && Educations(resume.education)}             \n              {resume && resume.skills && resume.skills.length > 0 && Skills(resume.skills)}           \n              {resume && resume.languages && resume.languages.length > 0 && Languages(resume.languages)}           \n              {resume && resume.interests && resume.interests.length > 0 && Interests(resume.interests)}                         \n              {resume && resume.references && resume.references.length > 0 && References(resume.references)}\n              {resume && resume.projects && resume.projects.length >0 && Projects(resume.projects)}\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default ResumePage;\n","import React from 'react';\n\nimport Resume from './pages/Resume';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst App: React.FC = () => (\n    <Router>\n        <Route path=\"/\" exact={true} component={Resume} />\n    </Router>\n  )\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}